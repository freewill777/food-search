{
  "version": 3,
  "sources": ["../../../node_modules/react-use/lib/misc/util.js", "../../../node_modules/react-use/lib/useMedia.js", "../../../app/components/animated-text/animated-text.tsx", "../../../app/components/animated-text/index.ts", "../../../app/components/animated-text/animated-text.motion.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNavigator = exports.isBrowser = exports.off = exports.on = exports.noop = void 0;\nvar noop = function () { };\nexports.noop = noop;\nfunction on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexports.on = on;\nfunction off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexports.off = off;\nexports.isBrowser = typeof window !== 'undefined';\nexports.isNavigator = typeof navigator !== 'undefined';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar util_1 = require(\"./misc/util\");\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (util_1.isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = react_1.useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    react_1.useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexports.default = useMedia;\n", "/* eslint-disable react/no-array-index-key */\nimport type { ComponentPropsWithoutRef, ElementType } from 'react'\nimport { useMemo } from 'react'\n\nimport type { Variants } from 'framer-motion'\nimport { motion } from 'framer-motion'\n\nimport { defaultLetterVariants, defaultTextVariants } from '~/components/animated-text'\n\ntype AnimatedTextOwnProps<C extends ElementType> = {\n  as?: C | ElementType\n  text: string\n  variants?: Variants\n}\n\ntype AnimatedTextProps<C extends ElementType> = AnimatedTextOwnProps<C> &\n  Omit<ComponentPropsWithoutRef<C>, keyof AnimatedTextOwnProps<C>>\n\nexport const AnimatedText = <C extends ElementType = 'p'>({\n  as: Tag = 'p',\n  text,\n  variants = defaultLetterVariants,\n  ...rest\n}: AnimatedTextProps<C>) => {\n  // Split the text into words and add a space after each word.\n  const words = text.split(' ').map(word => `${word}\\u00A0`)\n\n  const renderWords = useMemo(\n    () =>\n      words.map((word, index) => (\n        <span key={index} className='inline-block overflow-hidden'>\n          <motion.span variants={variants} className='inline-block'>\n            {word}\n          </motion.span>\n        </span>\n      )),\n    [variants, words]\n  )\n\n  return (\n    <Tag {...rest}>\n      <motion.span variants={variants}>{renderWords}</motion.span>\n    </Tag>\n  )\n}\n\nexport type AnimatedLettersOwnProps<C extends ElementType> = {\n  as?: C | ElementType\n  text: string\n  textVariants?: Variants\n  letterVariants?: Variants\n}\n\ntype AnimatedLettersProps<C extends ElementType> = AnimatedLettersOwnProps<C> &\n  Omit<ComponentPropsWithoutRef<C>, keyof AnimatedLettersOwnProps<C>>\n\nexport const AnimatedLetters = <C extends ElementType = 'div'>({\n  as: Tag = 'div',\n  text,\n  textVariants = defaultTextVariants,\n  letterVariants = defaultLetterVariants,\n  ...rest\n}: AnimatedLettersProps<C>) => {\n  // Split the text into words and add a space after each word.\n  const words = text.split(' ').map(word => `${word}\\u00A0`)\n  return (\n    <Tag {...rest}>\n      <motion.span variants={textVariants}>\n        {words.map((_, index) => (\n          <span key={index} className='inline-block whitespace-nowrap'>\n            {[...words[index]].flat().map((letter, letterIndex) => (\n              <span key={letterIndex} className='inline-block overflow-hidden'>\n                <motion.span variants={letterVariants} className='inline-block'>\n                  {letter}\n                </motion.span>\n              </span>\n            ))}\n          </span>\n        ))}\n      </motion.span>\n    </Tag>\n  )\n}\n", "export * from './animated-text'\nexport * from './animated-text.motion'\n", "import type { Variants } from 'framer-motion'\n\nexport const defaultTextVariants: Variants = {\n  visible: {},\n}\n\nexport const defaultLetterVariants: Variants = {\n  hidden: { opacity: 0, y: 50 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: { ease: 'circOut', duration: 0.5 },\n  },\n}\n"],
  "mappings": "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",
  "names": []
}
